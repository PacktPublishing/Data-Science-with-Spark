{"paragraphs":[{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481734865148_-1978730191","id":"20161214-180105_1731144821","dateCreated":"2016-12-14T18:01:05+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10575","text":"object GeoHash extends Serializable {\n  val base32 = \"0123456789bcdefghjkmnpqrstuvwxyz\"\n  def decodeBounds( geohash:String ):((Double,Double),(Double,Double)) = {\n    def toBitList( s:String ) = s.flatMap{\n      c => (\"00000\" + base32.indexOf(c).toBinaryString ).\n        reverse.take(5).reverse.map('1' == ) } toList\n    def split( l:List[Boolean] ):(List[Boolean],List[Boolean]) ={\n      l match{\n        case Nil => (Nil,Nil)\n        case x::Nil => ( x::Nil,Nil)\n        case x::y::zs => val (xs,ys) =split( zs );( x::xs,y::ys)\n      }\n    }\n    def dehash( xs:List[Boolean] , min:Double,max:Double):(Double,Double) = {\n      ((min,max) /: xs ){\n        case ((min,max) ,b) =>\n          if( b )( (min + max )/2 , max )\n          else ( min,(min + max )/ 2 )\n      }\n    }\n    val ( xs ,ys ) = split( toBitList( geohash ) )\n    ( dehash( ys ,-90,90) , dehash( xs, -180,180 ) )\n  }\n  def decode( geohash:String ):(Double,Double) = {\n    decodeBounds(geohash) match {\n      case ((minLat,maxLat),(minLng,maxLng)) => ( (maxLat+minLat)/2, (maxLng+minLng)/2 )\n    }\n  }\n  def encode( lat:Double, lng:Double ):String = encode(lat,lng,12)\n  def encode( lat:Double, lng:Double, precision:Int ):String = {\n    var (minLat,maxLat) = (-90.0,90.0)\n    var (minLng,maxLng) = (-180.0,180.0)\n    val bits = List(16,8,4,2,1)\n    (0 until precision).map{ p => {\n      base32 apply (0 until 5).map{ i => {\n        if (((5 * p) + i) % 2 == 0) {\n          val mid = (minLng+maxLng)/2.0\n          if (lng > mid) {\n            minLng = mid\n            bits(i)\n          } else {\n            maxLng = mid\n            0\n          }\n        } else {\n          val mid = (minLat+maxLat)/2.0\n          if (lat > mid) {\n            minLat = mid\n            bits(i)\n          } else {\n            maxLat = mid\n            0\n          }\n        }\n      }}.reduceLeft( (a,b) => a|b )\n    }}.mkString(\"\")\n  }\n}","dateUpdated":"2016-12-14T18:01:14+0100","dateFinished":"2016-12-14T18:01:15+0100","dateStarted":"2016-12-14T18:01:14+0100","result":{"code":"SUCCESS","type":"TEXT","msg":"\nwarning: there were two feature warnings; re-run with -feature for details\n\ndefined object GeoHash\n"}},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481734874917_-1356191146","id":"20161214-180114_355372704","dateCreated":"2016-12-14T18:01:14+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10644","dateUpdated":"2016-12-14T18:01:23+0100","dateFinished":"2016-12-14T18:01:23+0100","dateStarted":"2016-12-14T18:01:23+0100","result":{"code":"SUCCESS","type":"TEXT","msg":"\ntweets: org.apache.spark.sql.DataFrame = [accessLevel: bigint, contributors: array<string> ... 33 more fields]\n\ngeohash: (lat: Double, lng: Double)String\n\nimport org.apache.spark.sql.functions._\n\ngeohashUdf: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function2>,StringType,Some(List(DoubleType, DoubleType)))\n"},"text":"val tweets = spark.read.parquet(\"/dataset/twitter/reference\")\ndef geohash(lat: Double, lng: Double): String = GeoHash.encode(lat, lng)\nimport org.apache.spark.sql.functions._\nval geohashUdf = udf((lat: Double, lng: Double) => geohash(lat, lng))"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481734883248_-1121327396","id":"20161214-180123_2084773787","dateCreated":"2016-12-14T18:01:23+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10722","dateUpdated":"2016-12-14T18:01:30+0100","dateFinished":"2016-12-14T18:01:31+0100","dateStarted":"2016-12-14T18:01:30+0100","result":{"code":"SUCCESS","type":"TEXT","msg":"\ngeohashed: org.apache.spark.sql.DataFrame = [accessLevel: bigint, contributors: array<string> ... 34 more fields]\n+------------------+------------+\n|                id|     geohash|\n+------------------+------------+\n|788268064987021312|r3g69n1gpuk8|\n|788268064987021312|r3g69n1gpuk8|\n|788268064987021312|r3g69n1gpuk8|\n|788266550822330368|s0v4bpwrcrtb|\n|788268933195247616|qxgm1symr3gg|\n|788267968501252096|9q9k2e5080gd|\n|788267968501252096|9q9k2e5080gd|\n|788267968501252096|9q9k2e5080gd|\n|788268828346245120|sp2cusfq4dp3|\n|788268828346245120|sp2cusfq4dp3|\n|788268828346245120|sp2cusfq4dp3|\n|788268132104273920|dpeh6qr7c6nn|\n|788268132104273920|dpeh6qr7c6nn|\n|788266513077633024|qqgu5q2snku5|\n|788266513077633024|qqgu5q2snku5|\n|788266513077633024|qqgu5q2snku5|\n|788266550822330368|s0v4bpwrcrtb|\n|788266550822330368|s0v4bpwrcrtb|\n+------------------+------------+\n\n"},"text":"val geohashed = tweets\n  .filter(tweets(\"geoLocation.latitude\").isNotNull)\n  .filter(tweets(\"geoLocation.longitude\").isNotNull)\n  .withColumn(\"geohash\", geohashUdf(col(\"geoLocation.latitude\"), col(\"geoLocation.longitude\")))\ngeohashed.select(\"id\", \"geohash\").show"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481734890424_412681793","id":"20161214-180130_1083908615","dateCreated":"2016-12-14T18:01:30+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10796","dateUpdated":"2016-12-14T18:01:40+0100","dateFinished":"2016-12-14T18:01:42+0100","dateStarted":"2016-12-14T18:01:40+0100","result":{"code":"SUCCESS","type":"TEXT","msg":"\nlondons: org.apache.spark.rdd.RDD[org.apache.spark.sql.Row] = MapPartitionsRDD[36] at filter at <console>:78\n"},"text":"val londons = geohashed.rdd.filter(r => r.getAs[String](\"geohash\").startsWith(\"gcpvj0\"))\nlondons.take(10).foreach(r => println(r.getAs[String](\"geohash\")))\nz.angularBind(\"londons\", londons.map((r => r.getAs[String](\"geohash\"))))"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481734900016_-1800393880","id":"20161214-180140_767589642","dateCreated":"2016-12-14T18:01:40+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10873","dateUpdated":"2016-12-14T18:01:49+0100","dateFinished":"2016-12-14T18:01:49+0100","dateStarted":"2016-12-14T18:01:49+0100","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <style>\n      .leaflet-tile-pane {\n      \topacity: 0.3;\n      }\n    </style>\n    <link rel=\"stylesheet\" href=\"http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.css\" type=\"text/css\" media=\"screen\" />\n    <link rel=\"stylesheet\" href=\"http://platform.datalayer.io/leaflet-dvf/dist/css/dvf.css\" type=\"text/css\" media=\"screen\" />\n    <link rel=\"stylesheet\" href=\"http://platform.datalayer.io/leaflet-dvf/css/example.css\" type=\"text/css\" media=\"screen\" />\n</head>\n<body>\n\t<script type=\"text/javascript\" src=\"http://maps.stamen.com/js/tile.stamen.js?v1.2.4\"></script>\n    <div class=\"container-fluid\">\n    \t<div class=\"row-fluid\">\n\t\t\t<div id=\"map\" class=\"span9\"></div>\n\t\t\t<div id=\"legend\" class=\"span3\"></div>\n\t\t</div>\n\t</div>\n\t<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.9.1.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://maps.stamen.com/js/tile.stamen.js?v1.2.4\"></script>\n\t<script type=\"text/javascript\" src=\"http://platform.datalayer.io/leaflet-dvf/lib/jsts/javascript.util.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://platform.datalayer.io/leaflet-dvf/lib/jsts/jsts.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://platform.datalayer.io/leaflet-dvf/lib/date.format.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://platform.datalayer.io/leaflet-dvf/lib/geohash.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://platform.datalayer.io/leaflet-dvf/dist/leaflet-dvf.min.js\"></script>\n\n\t<script type=\"text/javascript\">\n\t\n$(document).ready(function() {\n\n\tvar map;\n\t\n\t// create a map in the \"map\" div, set the view to a given place and zoom\n\tmap = L.map('map').setView([0.0, 0.0], 2);\n/*\t\n\tvar baseLayer = new L.StamenTileLayer('toner', {\n\t\tdetectRetina: true\n\t});\n*/\t\n\tvar baseLayer = new L.StamenTileLayer('toner');\n\tbaseLayer.addTo(map);\n\n\tvar geohashData = {\n\t\t      \"_type\": \"terms\", \n\t\t      \"total\": 638222, \n\t\t      \"terms\": [\n\t\t        {\n\t\t          \"count\": 34677, \n\t\t          \"term\": \"tnk\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 21076, \n\t\t          \"term\": \"svz\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 17655, \n\t\t          \"term\": \"s00\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 7082, \n\t\t          \"term\": \"w30\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 6662, \n\t\t          \"term\": \"sv8\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 5964, \n\t\t          \"term\": \"syq\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 5594, \n\t\t          \"term\": \"xn7\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 5123, \n\t\t          \"term\": \"tq8\"\n\t\t        }\n\t\t      ], \n\t\t      \"other\": 406994, \n\t\t      \"missing\": 50\n\t\t    };\n\t\n\tvar colorFunction = new L.HSLHueFunction(new L.Point(357,200), new L.Point(34677,0), {outputSaturation: '100%', outputLuminosity: '25%'});\n\tvar fillColorFunction = new L.HSLHueFunction(new L.Point(357,200), new L.Point(34677,0), {outputSaturation: '100%', outputLuminosity: '50%'});\n\n\tvar options = {\n\t\trecordsField: 'terms',\n\t\tgeohashField: 'term',\n\t\tdisplayOptions: {\n\t\t\tcount: {\n\t\t\t\tcolor: colorFunction,\n\t\t\t\tfillColor: fillColorFunction,\n\t\t\t\tgradient: true\n\t\t\t}\n\t\t},\n\t\tlayerOptions: {\n\t\t\tfillOpacity: 0.7,\n\t\t\topacity: 1,\n\t\t\tweight: 1,\n\t\t\tgradient: true\n\t\t}\n\t};\n\n\tvar layer = new L.GeohashDataLayer(geohashData, options);\n\t\n\tmap.addLayer(layer);\n\t\n\t$('#legend').append(layer.getLegend({\n\t\tnumSegments: 20,\n\t\twidth: 80,\n\t\tclassName: 'well'\n\t}));\n\n});\n</script>\n</body>\n</html>"},"text":"%angular\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <style>\n      .leaflet-tile-pane {\n      \topacity: 0.3;\n      }\n    </style>\n    <link rel=\"stylesheet\" href=\"http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.css\" type=\"text/css\" media=\"screen\" />\n    <link rel=\"stylesheet\" href=\"http://platform.datalayer.io/leaflet-dvf/dist/css/dvf.css\" type=\"text/css\" media=\"screen\" />\n    <link rel=\"stylesheet\" href=\"http://platform.datalayer.io/leaflet-dvf/css/example.css\" type=\"text/css\" media=\"screen\" />\n</head>\n<body>\n\t<script type=\"text/javascript\" src=\"http://maps.stamen.com/js/tile.stamen.js?v1.2.4\"></script>\n    <div class=\"container-fluid\">\n    \t<div class=\"row-fluid\">\n\t\t\t<div id=\"map\" class=\"span9\"></div>\n\t\t\t<div id=\"legend\" class=\"span3\"></div>\n\t\t</div>\n\t</div>\n\t<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.9.1.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://cdn.leafletjs.com/leaflet-0.7.5/leaflet.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://maps.stamen.com/js/tile.stamen.js?v1.2.4\"></script>\n\t<script type=\"text/javascript\" src=\"http://platform.datalayer.io/leaflet-dvf/lib/jsts/javascript.util.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://platform.datalayer.io/leaflet-dvf/lib/jsts/jsts.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://platform.datalayer.io/leaflet-dvf/lib/date.format.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://platform.datalayer.io/leaflet-dvf/lib/geohash.js\"></script>\n\t<script type=\"text/javascript\" src=\"http://platform.datalayer.io/leaflet-dvf/dist/leaflet-dvf.min.js\"></script>\n\n\t<script type=\"text/javascript\">\n\t\n$(document).ready(function() {\n\n\tvar map;\n\t\n\t// create a map in the \"map\" div, set the view to a given place and zoom\n\tmap = L.map('map').setView([0.0, 0.0], 2);\n/*\t\n\tvar baseLayer = new L.StamenTileLayer('toner', {\n\t\tdetectRetina: true\n\t});\n*/\t\n\tvar baseLayer = new L.StamenTileLayer('toner');\n\tbaseLayer.addTo(map);\n\n\tvar geohashData = {\n\t\t      \"_type\": \"terms\", \n\t\t      \"total\": 638222, \n\t\t      \"terms\": [\n\t\t        {\n\t\t          \"count\": 34677, \n\t\t          \"term\": \"tnk\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 21076, \n\t\t          \"term\": \"svz\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 17655, \n\t\t          \"term\": \"s00\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 7082, \n\t\t          \"term\": \"w30\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 6662, \n\t\t          \"term\": \"sv8\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 5964, \n\t\t          \"term\": \"syq\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 5594, \n\t\t          \"term\": \"xn7\"\n\t\t        }, \n\t\t        {\n\t\t          \"count\": 5123, \n\t\t          \"term\": \"tq8\"\n\t\t        }\n\t\t      ], \n\t\t      \"other\": 406994, \n\t\t      \"missing\": 50\n\t\t    };\n\t\n\tvar colorFunction = new L.HSLHueFunction(new L.Point(357,200), new L.Point(34677,0), {outputSaturation: '100%', outputLuminosity: '25%'});\n\tvar fillColorFunction = new L.HSLHueFunction(new L.Point(357,200), new L.Point(34677,0), {outputSaturation: '100%', outputLuminosity: '50%'});\n\n\tvar options = {\n\t\trecordsField: 'terms',\n\t\tgeohashField: 'term',\n\t\tdisplayOptions: {\n\t\t\tcount: {\n\t\t\t\tcolor: colorFunction,\n\t\t\t\tfillColor: fillColorFunction,\n\t\t\t\tgradient: true\n\t\t\t}\n\t\t},\n\t\tlayerOptions: {\n\t\t\tfillOpacity: 0.7,\n\t\t\topacity: 1,\n\t\t\tweight: 1,\n\t\t\tgradient: true\n\t\t}\n\t};\n\n\tvar layer = new L.GeohashDataLayer(geohashData, options);\n\t\n\tmap.addLayer(layer);\n\t\n\t$('#legend').append(layer.getLegend({\n\t\tnumSegments: 20,\n\t\twidth: 80,\n\t\tclassName: 'well'\n\t}));\n\n});\n</script>\n</body>\n</html>\n\n"},{"text":"","dateUpdated":"2016-12-14T18:02:02+0100","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481734909304_-1078974368","id":"20161214-180149_2004854236","dateCreated":"2016-12-14T18:01:49+0100","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10947"}],"name":"07.2","id":"2C4DAAKV9","angularObjects":{"2BXV59BJ5:shared_process":[],"2BZ7JWBYX:shared_process":[],"2BYKQAFE3:shared_process":[],"2BXX92DZZ:shared_process":[],"2BY8191PX:shared_process":[],"2C242HAW7:shared_process":[],"2BXRBYBNN:shared_process":[],"2C1F64B57:shared_process":[],"2BXESURSJ:shared_process":[],"2BZSUGKDS:shared_process":[],"2C26Y211G:shared_process":[],"2C1URPXW3:shared_process":[],"2BZN774H8:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}