{"paragraphs":[{"text":"import org.apache.spark.graphx.Edge\nimport org.apache.spark.graphx.Graph\n\nval tweets = spark.read.parquet(\"/dataset/twitter/reference\")\n\nimport org.apache.spark.sql.functions.explode\nval mentions = tweets\n  .select(\n    tweets(\"id\"),\n    tweets(\"user.screenName\").as(\"screenName\"),\n    explode(tweets(\"userMentionEntities.screenName\")).as(\"mentionedScreenName\")\n  )\nmentions.show\n\nval screenNames = mentions.rdd.flatMap({ mention =>\n  Seq(\n    mention.getAs[String](\"screenName\"),\n    mention.getAs[String](\"mentionedScreenName\")\n  )})\n  .distinct\n  .toDF(\"screenName\")","dateUpdated":"2016-12-16T17:28:33+0100","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905707551_971358381","id":"20161216-172827_574868952","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.graphx.Edge\n\nimport org.apache.spark.graphx.Graph\n\ntweets: org.apache.spark.sql.DataFrame = [accessLevel: bigint, contributors: array<string> ... 33 more fields]\n\nimport org.apache.spark.sql.functions.explode\n\nmentions: org.apache.spark.sql.DataFrame = [id: bigint, screenName: string ... 1 more field]\n+------------------+--------------+-------------------+\n|                id|    screenName|mentionedScreenName|\n+------------------+--------------+-------------------+\n|788267985303658496|sparklerjensen|             halsey|\n|788267985295269888|     an0nh4x0r|         andrew8088|\n|788267985282605056| jenniferw1318|       lFRANKOCEANl|\n|788267985307836418|        Pravsw|    63moonsofficial|\n|788267985307836418|        Pravsw|           AmitShah|\n|788267985307836418|        Pravsw|        arunjaitley|\n|788267985307860992| theyLoveElani|            ddree__|\n|788267985274220545|      YOunkaew|    LeeJongSukWorld|\n|788267985286725632|     CheIsOnly|           LAGalaxy|\n|788267985286725632|     CheIsOnly|         TheRealAC3|\n|788267985286725632|     CheIsOnly|          Herbalife|\n|788267985278566400| LOSTINGLASGOW|           LARRAYOX|\n|788267985278566400| LOSTINGLASGOW|           LARRAYOX|\n|788267989485355008|sonuyadavsy172|    Gurmeetramrahim|\n|788267989489618944|         xERGx|       HENNTAIGAMER|\n|788267989468446720|  Dat_Bearsfan|           Draodran|\n|788267989468446720|  Dat_Bearsfan|          My_Goggle|\n|788267989506355200|bilalmahmooduk|          Wajeeha_H|\n|788267989506355200|bilalmahmooduk|     RedLips_Kaffir|\n|788267989506355200|bilalmahmooduk|            1AyshaM|\n+------------------+--------------+-------------------+\nonly showing top 20 rows\n\n\nscreenNames: org.apache.spark.sql.DataFrame = [screenName: string]\n"},"dateCreated":"2016-12-16T17:28:27+0100","dateStarted":"2016-12-16T17:28:33+0100","dateFinished":"2016-12-16T17:28:34+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2013"},{"text":"val vertices = screenNames.rdd.map { mention =>\n  val screenName = mention.getAs[String](\"screenName\")\n  (screenName.hashCode.toLong, screenName)\n}","dateUpdated":"2016-12-16T17:28:40+0100","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905713171_1528105364","id":"20161216-172833_523113243","result":{"code":"SUCCESS","type":"TEXT","msg":"\nvertices: org.apache.spark.rdd.RDD[(Long, String)] = MapPartitionsRDD[109] at map at <console>:46\n"},"dateCreated":"2016-12-16T17:28:33+0100","dateStarted":"2016-12-16T17:28:40+0100","dateFinished":"2016-12-16T17:28:40+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2014"},{"text":"val edges = mentions.rdd.map ({ mention =>\n  val id = mention.getAs[Long](\"id\")\n  val screenName = mention.getAs[String](\"screenName\")\n  val mentionedScreenName = mention.getAs[String](\"mentionedScreenName\")\n  Edge(screenName.hashCode.toLong, mentionedScreenName.hashCode.toLong, id)\n})","dateUpdated":"2016-12-16T17:29:21+0100","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905718099_972158527","id":"20161216-172838_1867374948","dateCreated":"2016-12-16T17:28:38+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2015","dateFinished":"2016-12-16T17:29:21+0100","dateStarted":"2016-12-16T17:29:21+0100","result":{"code":"SUCCESS","type":"TEXT","msg":"\nedges: org.apache.spark.rdd.RDD[org.apache.spark.graphx.Edge[Long]] = MapPartitionsRDD[126] at map at <console>:44\n"},"focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905761346_1769620404","id":"20161216-172921_523721562","dateCreated":"2016-12-16T17:29:21+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2218","dateUpdated":"2016-12-16T17:29:27+0100","dateFinished":"2016-12-16T17:29:27+0100","dateStarted":"2016-12-16T17:29:27+0100","result":{"code":"SUCCESS","type":"TEXT","msg":"\ngraph: org.apache.spark.graphx.Graph[String,Long] = org.apache.spark.graphx.impl.GraphImpl@705d897c\n\nres11: org.apache.spark.graphx.Graph[String,Long] = org.apache.spark.graphx.impl.GraphImpl@705d897c\n"},"text":"val graph = Graph(vertices, edges)\ngraph.cache"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905767426_-2145584404","id":"20161216-172927_413438693","dateCreated":"2016-12-16T17:29:27+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2296","dateUpdated":"2016-12-16T17:29:32+0100","dateFinished":"2016-12-16T17:29:34+0100","dateStarted":"2016-12-16T17:29:32+0100","result":{"code":"SUCCESS","type":"TEXT","msg":"(1350478528,OWCalifornia)\n(-561256529,KGoonPBS)\n(564137360,IncrediblyLol)\n(-810813937,ThatLmaoComedy)\n(-769146729,Draodran)\nEdge(-2073997856,119138877,788267960141950977)\nEdge(-2026562086,-2076371626,788268006266671104)\nEdge(-2026562086,-2076371626,788268006266671104)\nEdge(-2026562086,-2076371626,788268006266671104)\nEdge(-2007154549,-106206522,788266672469577729)\n((-2073997856,CoyaaRedd),(119138877,NCAAFNation247),788267960141950977)\n((-2026562086,reginer_12),(-2076371626,CardiB_),788268006266671104)\n((-2026562086,reginer_12),(-2076371626,CardiB_),788268006266671104)\n((-2026562086,reginer_12),(-2076371626,CardiB_),788268006266671104)\n((-2007154549,murugadass_bjp),(-106206522,BJP4Karnataka),788266672469577729)\n"},"text":"graph.vertices.take(5).foreach(println)\ngraph.edges.take(5).foreach(println)\ngraph.triplets.take(5).foreach(println)"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905772721_654233342","id":"20161216-172932_78916843","dateCreated":"2016-12-16T17:29:32+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2373","dateUpdated":"2016-12-16T17:29:40+0100","dateFinished":"2016-12-16T17:29:50+0100","dateStarted":"2016-12-16T17:29:40+0100","result":{"code":"SUCCESS","type":"TEXT","msg":"\nranks: org.apache.spark.graphx.VertexRDD[Double] = VertexRDDImpl[955] at RDD at VertexRDD.scala:57\n\nranksByScreenName: org.apache.spark.rdd.RDD[(String, Double)] = MapPartitionsRDD[962] at map at <console>:61\n(OWCalifornia,0.27749999999999997)\n(KGoonPBS,0.27749999999999997)\n(IncrediblyLol,0.15)\n(ThatLmaoComedy,0.15)\n(Draodran,0.21375)\n(Ssoowwmmyyaa,0.2092716454121656)\n(king_amit1991,0.15)\n(GregAbbott_TX,0.21375)\n(LisaBTusc,0.15)\n(Moonztunes1,0.15)\n"},"text":"val ranks = graph.pageRank(0.0001).vertices\n\nval ranksByScreenName = screenNames\n  .rdd\n  .map(r => {\n    val screenName = r.getAs[String](\"screenName\")\n    (screenName.hashCode().toLong, screenName)\n  })\n  .join(ranks)\n  .map {\n    case (id, (screenName, rank)) => (screenName, rank)\n  }\n\nprintln(ranksByScreenName.take(10).mkString(\"\\n\"))"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905780682_496501617","id":"20161216-172940_225075616","dateCreated":"2016-12-16T17:29:40+0100","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2452","dateUpdated":"2016-12-16T17:29:47+0100","dateFinished":"2016-12-16T17:29:52+0100","dateStarted":"2016-12-16T17:29:47+0100","result":{"code":"ERROR","type":"TEXT","msg":"\nconnectedComponents: org.apache.spark.graphx.Graph[org.apache.spark.graphx.VertexId,Long] = org.apache.spark.graphx.impl.GraphImpl@f81bed9\nccCounts: scala.collection.Map[org.apache.spark.graphx.VertexId,Long] = Map(-472241583 -> 4, -2061467719 -> 2, -1974161508 -> 3, -794465633 -> 2, -1212438426 -> 4, 315343697 -> 2, 129634162 -> 2, 2100401504 -> 2, -1969154778 -> 2, -871555480 -> 3, -1761524317 -> 3, -1658980755 -> 2, -1898468779 -> 2, -1844028959 -> 2, -1695031385 -> 2, 565908510 -> 2, 1143926711 -> 2, -1911940795 -> 2, -1993395187 -> 4, -532897326 -> 2, -52304079 -> 2, -1119939372 -> 2, -2003518735 -> 7, 1530584286 -> 2, -1714506186 -> 2, -1168029481 -> 2, -996127882 -> 1, -660003977 -> 2, -932233896 -> 2, 1136319575 -> 2, 1305929970 -> 2, -956879430 -> 2, -1350224921 -> 2, -786260254 -> 2, -1192101330 -> 3, 805485609 -> 2, -1343357923 -> 2, -1970292887 -> 2, 1929649474 -> 1, -1223254027 -> 2, 290126187 -> 2, -646507257...\ntopComponent: (org.apache.spark.graphx.VertexId, Long) = (-2137105294,29)\n\nccRdd: org.apache.spark.graphx.VertexRDD[(String, org.apache.spark.graphx.VertexId)] = VertexRDDImpl[1076] at RDD at VertexRDD.scala:57\n\nmentionTopComponent: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[1079] at map at <console>:62\n\n\n\n<console>:52: error: not found: value cc\n         .join(cc)\n               ^\n"},"text":"val connectedComponents = graph.connectedComponents.cache\n\nval ccCounts = connectedComponents.vertices.map{case (_, vertexId) => vertexId}.countByValue\n\nval topComponent = ccCounts.toSeq.sortBy{case (componentId, count) => count}.reverse.head\n\nval ccRdd = graph.vertices.innerJoin(connectedComponents.vertices) {\n  case (vertexId, hashTag, componentId) => (hashTag, componentId)\n}\n\nval mentionTopComponent = ccRdd\n  .filter{ case (vertexId, (hashTag, componentId)) => (componentId == topComponent._1) }\n  .map{ case (vertexId, (mention, componentId)) => mention }\n  \nval ccByScreenName =  screenNames\n  .rdd\n  .map(r => {\n    val screenName = r.getAs[String](\"screenName\")\n    (screenName.hashCode().toLong, screenName)\n  })\n  .join(cc)\n  .map { case (id, (username, cc)) => (username, cc) }\nprintln(ccByScreenName.take(10).mkString(\"\\n\"))"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905787155_-2080161767","id":"20161216-172947_700936276","dateCreated":"2016-12-16T17:29:47+0100","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2530","dateUpdated":"2016-12-16T17:29:57+0100","text":""}],"name":"10.2","id":"2C3FQ3DP3","angularObjects":{"2BXV59BJ5:shared_process":[],"2BZ7JWBYX:shared_process":[],"2BYKQAFE3:shared_process":[],"2BXX92DZZ:shared_process":[],"2BY8191PX:shared_process":[],"2C242HAW7:shared_process":[],"2BXRBYBNN:shared_process":[],"2C1F64B57:shared_process":[],"2BXESURSJ:shared_process":[],"2BZSUGKDS:shared_process":[],"2C26Y211G:shared_process":[],"2C1URPXW3:shared_process":[],"2BZN774H8:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}