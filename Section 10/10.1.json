{"paragraphs":[{"text":"import org.apache.spark.ml.feature.{HashingTF, IDF, Tokenizer, StopWordsRemover}\nimport org.apache.spark.ml.Pipeline\n\nval tokenizer = new Tokenizer()\n  .setInputCol(\"text\")\n  .setOutputCol(\"words\")\n\nval stopWordsRemover = new StopWordsRemover()\n  .setInputCol(tokenizer.getOutputCol)\n  .setOutputCol(\"filtered\")\n\nval tf = new HashingTF()\n  .setInputCol(tokenizer.getOutputCol)\n  .setOutputCol(\"rawFeatures\")\n  .setNumFeatures(20)\n\nval idf = new IDF()\n  .setInputCol(tf.getOutputCol)\n  .setOutputCol(\"features\")\n\nval pipeline = new Pipeline()\n  .setStages(Array(tokenizer, stopWordsRemover, tf, idf))\n\nval tweets = spark.read.parquet(\"/dataset/twitter/reference\")\nval model = pipeline.fit(tweets.select(\"text\"))\n\nval tfidf = model.transform(tweets.select(\"text\"))\ntfidf.select(\"features\").take(5).foreach(println)\ntfidf.cache","dateUpdated":"2016-12-16T17:32:28+0100","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905938708_1990895349","id":"20161216-172806_823913475","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.ml.feature.{HashingTF, IDF, Tokenizer, StopWordsRemover}\n\nimport org.apache.spark.ml.Pipeline\n\ntokenizer: org.apache.spark.ml.feature.Tokenizer = tok_6d6b3c49f86a\n\nstopWordsRemover: org.apache.spark.ml.feature.StopWordsRemover = stopWords_d7d4d0c7817f\n\ntf: org.apache.spark.ml.feature.HashingTF = hashingTF_59d847d5432e\n\nidf: org.apache.spark.ml.feature.IDF = idf_5f02d3691aa9\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_b5abe49ae79e\n\ntweets: org.apache.spark.sql.DataFrame = [accessLevel: bigint, contributors: array<string> ... 33 more fields]\n\nmodel: org.apache.spark.ml.PipelineModel = pipeline_b5abe49ae79e\n\ntfidf: org.apache.spark.sql.DataFrame = [text: string, words: array<string> ... 3 more fields]\n[(20,[0,5,8,9,12,13,14],[1.5692682479037992,0.6328142005564081,0.5986157052766189,0.7743171569809674,0.8234006192900588,0.28094501575522884,0.940349813776933])]\n[(20,[0,1,2,3,5,6,7,8,10,12,13,17,18],[0.7846341239518996,2.383679291255609,0.8488763926802534,0.826485454641269,0.6328142005564081,0.8536269954388511,1.0455180032489566,1.7958471158298566,0.45028053219097197,1.6468012385801176,0.5618900315104577,0.8280314482498875,1.723190330176056])]\n[(20,[1,2,3,5,16,19],[0.7945597637518697,0.8488763926802534,0.826485454641269,0.6328142005564081,1.9994012227405649,0.8913673234216983])]\n[(20,[1,4,13,14,15,16,19],[0.7945597637518697,0.9300167712066874,0.5618900315104577,0.940349813776933,0.8515128297465157,0.6664670742468549,0.8913673234216983])]\n[(20,[0,2,3,4,5,8,9,10,12,13,15,16,18],[0.7846341239518996,0.8488763926802534,0.826485454641269,0.9300167712066874,0.6328142005564081,0.5986157052766189,0.7743171569809674,1.8011221287638879,0.8234006192900588,0.5618900315104577,1.7030256594930313,1.3329341484937098,0.861595165088028])]\n\nres1: tfidf.type = [text: string, words: array<string> ... 3 more fields]\n"},"dateCreated":"2016-12-16T17:32:18+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:121","dateFinished":"2016-12-16T17:32:45+0100","dateStarted":"2016-12-16T17:32:28+0100"},{"text":"import org.apache.spark.mllib.linalg.{Vectors => MlLibVectors}\nimport org.apache.spark.mllib.linalg.distributed.{MatrixEntry, RowMatrix, CoordinateMatrix}\nimport org.apache.spark.ml.linalg.Vector\n\nval vectors = tfidf.rdd.map(r => MlLibVectors.dense(r.getAs[Vector](\"features\").toDense.toArray))\n\nval mat = new RowMatrix(vectors)\nprintln(s\"RowMatrix size: ${mat.numRows}x${mat.numCols}\")","dateUpdated":"2016-12-16T17:32:28+0100","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905938710_1991664847","id":"20161216-172808_272537403","result":{"code":"SUCCESS","type":"TEXT","msg":"\nimport org.apache.spark.mllib.linalg.{Vectors=>MlLibVectors}\n\nimport org.apache.spark.mllib.linalg.distributed.{MatrixEntry, RowMatrix, CoordinateMatrix}\n\nimport org.apache.spark.ml.linalg.Vector\n\nvectors: org.apache.spark.rdd.RDD[org.apache.spark.mllib.linalg.Vector] = MapPartitionsRDD[20] at map at <console>:46\n\nmat: org.apache.spark.mllib.linalg.distributed.RowMatrix = org.apache.spark.mllib.linalg.distributed.RowMatrix@2a401947\nRowMatrix size: 4437x20\n"},"dateCreated":"2016-12-16T17:32:18+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:122","dateFinished":"2016-12-16T17:32:47+0100","dateStarted":"2016-12-16T17:32:29+0100"},{"text":"val rmTfidf = vectors.zipWithIndex().map({case (v, r) => {\n  val buf = scala.collection.mutable.ListBuffer.empty[MatrixEntry]\n  v.foreachActive((c, v) => buf += new MatrixEntry(r, c, v))\n  buf.toList\n}}).flatMap(identity)\n\nval cmat = new CoordinateMatrix(rmTfidf)\nprintln(s\"CoordinateMatrix size: ${cmat.numRows}x${cmat.numCols}\")\n\nval transposed = cmat.transpose()\nprintln(s\"Transposed CoordinateMatrix size: ${transposed.numRows}x${transposed.numCols}\")\n\nval indexedRowMatrix = transposed.toRowMatrix()\n\nval brutforce = indexedRowMatrix.columnSimilarities()\nprintln(brutforce.entries.map(me => ((me.i, me.j), me.value)).first)\n\nval approx = indexedRowMatrix.columnSimilarities(0.1)\nprintln(approx.entries.map(me => ((me.i, me.j), me.value)).first)","dateUpdated":"2016-12-16T17:32:28+0100","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905938710_1991664847","id":"20161216-172813_1672906024","result":{"code":"SUCCESS","type":"TEXT","msg":"\nrmTfidf: org.apache.spark.rdd.RDD[org.apache.spark.mllib.linalg.distributed.MatrixEntry] = MapPartitionsRDD[23] at flatMap at <console>:52\n\ncmat: org.apache.spark.mllib.linalg.distributed.CoordinateMatrix = org.apache.spark.mllib.linalg.distributed.CoordinateMatrix@5008ddaa\nCoordinateMatrix size: 4437x20\n\ntransposed: org.apache.spark.mllib.linalg.distributed.CoordinateMatrix = org.apache.spark.mllib.linalg.distributed.CoordinateMatrix@5a62db43\nTransposed CoordinateMatrix size: 20x4437\n\nindexedRowMatrix: org.apache.spark.mllib.linalg.distributed.RowMatrix = org.apache.spark.mllib.linalg.distributed.RowMatrix@21bb4907\n\nbrutforce: org.apache.spark.mllib.linalg.distributed.CoordinateMatrix = org.apache.spark.mllib.linalg.distributed.CoordinateMatrix@641a2f71\n((233,1265),0.3941258734401362)\n\napprox: org.apache.spark.mllib.linalg.distributed.CoordinateMatrix = org.apache.spark.mllib.linalg.distributed.CoordinateMatrix@87730c6\n((233,1265),0.3941258734401362)\n"},"dateCreated":"2016-12-16T17:32:18+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:123","dateFinished":"2016-12-16T17:42:26+0100","dateStarted":"2016-12-16T17:32:45+0100"},{"text":"","dateUpdated":"2016-12-16T17:32:28+0100","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1481905938710_1991664847","id":"20161216-172820_1475974138","dateCreated":"2016-12-16T17:32:18+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:124","dateFinished":"2016-12-16T17:42:27+0100","dateStarted":"2016-12-16T17:32:47+0100","result":{"code":"SUCCESS","type":"TEXT","msg":""}}],"name":"10.1","id":"2C4SQD8U4","angularObjects":{"2BXV59BJ5:shared_process":[],"2BZ7JWBYX:shared_process":[],"2BYKQAFE3:shared_process":[],"2BXX92DZZ:shared_process":[],"2BY8191PX:shared_process":[],"2C242HAW7:shared_process":[],"2BXRBYBNN:shared_process":[],"2C1F64B57:shared_process":[],"2BXESURSJ:shared_process":[],"2BZSUGKDS:shared_process":[],"2C26Y211G:shared_process":[],"2C1URPXW3:shared_process":[],"2BZN774H8:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}